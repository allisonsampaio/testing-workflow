name: Auto PR from develop to main

on:
  push:
    branches:
      - develop

jobs:
  create-or-update-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Install GitHub CLI
        uses: dev-hanz-ops/install-gh-cli-action@v0.1.0
        with:
          gh-cli-version: 2.32.0

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Check for existing PR
        id: check_pr
        run: |
          PR=$(gh pr list --base main --head develop --state open --json number --jq ".[] | .number")
          echo "::set-output name=pr_number::$PR"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR if not exists
        if: steps.check_pr.outputs.pr_number == ''
        run: |
          gh pr create --base main --head develop --title "[Deploy to Prod] Automated PR from develop to main" --body "This is an automated PR from develop to main."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update existing PR
        if: steps.check_pr.outputs.pr_number != ''
        run: |
          PR_NUMBER=${{ steps.check_pr.outputs.pr_number }}
          gh pr comment $PR_NUMBER --body 'Updated with latest changes from develop'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR details
        if: steps.check_pr.outputs.pr_number != ''
        run: |
          PR_NUMBER=${{ steps.check_pr.outputs.pr_number }}
          # Output the JSON of PR to debug
          gh pr view $PR_NUMBER --json commits > pr_commits.json
          cat pr_commits.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract and add reviewers
        if: steps.check_pr.outputs.pr_number != ''
        run: |
          PR_NUMBER=${{ steps.check_pr.outputs.pr_number }}
          # Check the structure of the JSON file
          echo "Inspecting pr_commits.json"
          jq '.' pr_commits.json

          # Extract the commit authors from the JSON file
          COMMITS=$(jq -r '.commits[].authors[].login' pr_commits.json | sort | uniq)
          echo "Commit authors: $COMMITS"

          # Add reviewers to PR
          for AUTHOR in $COMMITS; do
            if [ -n "$AUTHOR" ]; then
              echo "Adding reviewer: $AUTHOR"
              gh pr edit $PR_NUMBER --add-reviewer $AUTHOR
            else
              echo "No valid authors found"
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
